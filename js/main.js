!function(e){e(document).ready(function(){"pgp.help"!=window.location.host&&"gaff.github.io"!=window.location.host||"https:"==window.location.protocol||(window.location.protocol="https")})}(jQuery);var pgpApp=angular.module("pgpApp",["ngAnimate","ui.router","ui.bootstrap"]);pgpApp.directive("autoselectall",["$window",function(e){return{restrict:"C",link:function(t,r,n){r.on("click",function(){e.getSelection().toString()||this.select()}),r.on("blur",function(){r.scrollTop(0)})}}}]),pgpApp.directive("focusOn",function(){return function(e,t,r){e.$on("focusOn",function(e,n){n===r.focusOn&&t[0].focus()})}}),pgpApp.factory("focus",["$rootScope","$timeout",function(e,t){return function(r){t(function(){e.$broadcast("focusOn",r)})}}]),pgpApp.config(["$stateProvider","$urlRouterProvider",function(e,t){t.otherwise("/import"),e.state("permalink",{url:"/permalink?{pgp}",templateUrl:"keyWork.html",controller:"KeyWorkCtrl",params:{pgp:null}}).state("key",{url:"/",templateUrl:"keyWork.html",controller:"KeyWorkCtrl",params:{key:null,"private":null}}).state("import",{url:"/import?{pgp}",templateUrl:"keyWork.html",controller:"KeyWorkCtrl",params:{key:null,"private":null,pgp:null}}).state("generate",{url:"/generate",templateUrl:"keyGenerator.html",controller:"KeyGenerator"}).state("intro",{url:"/intro",templateUrl:"intro.html"})}]),pgpApp.config(["$compileProvider",function(e){e.aHrefSanitizationWhitelist(/^\s*(https?|data|mailto):/)}]),pgpApp.controller("KeyListCtrl",["$scope","$location","$modal",function(e,t,r){e.$location=t,e.getUser=function(e){return e?"alias"in e?e.alias:"primaryKey"in e?e.getPrimaryUser().user.userId.userid:(console.log("Ooops - no idea what this key is:"),console.log(e),"Unknown key!"):""},e.getFingerprint=function(e){return e?"primaryKey"in e?e.primaryKey.fingerprint:void 0:""},e.getKeyId=function(e){return e?"primaryKey"in e?e.primaryKey.getKeyId().toHex():void 0:""},e.addOrUpdateKey=function(t){var r=e.getFingerprint(t),n=null;if(t.isPrivate()){var o=e.keyring.privateKeys.getForId(r);o?(key=o,key.update(t),n=key):(e.keyring.privateKeys.push(t),n=t)}else{var o=e.keyring.publicKeys.getForId(r);o?(key=o,key.update(t),n=key):(e.keyring.publicKeys.push(t),n=t)}return n},e.allKeys=function(){return e.keyring.getAllKeys()},e.publicKeys=function(){return e.keyring.publicKeys.keys},e.privateKeys=function(){return e.keyring.privateKeys.keys},e.keyring=new openpgp.Keyring,e.workstarted=e.allKeys().length>0?!0:!1,e.skipintro=e.allKeys().length>2?!0:!1,e.persist=e.workstarted,e.stored=e.persist,pgpkeys=openpgp.key.readArmored(myKey),openpgp.config.commentstring="https://pgp.help",e.addOrUpdateKey(pgpkeys.keys[0]),e.findKey=function(t,r){return t?r?e.keyring.privateKeys.getForId(t):e.keyring.publicKeys.getForId(t):null},e.$watch("$viewContentLoaded",function(){}),e.$watch("persist",function(){e.persist&&(e.workstarted=!0),e.saveKeys()}),e.isPrivate=function(e){return e?e.isPrivate():!1},e.isDecrypted=function(e){return e?e.primaryKey.isDecrypted:!1},e.$on("persist",function(t){e.persist=!0}),e.$on("newkey",function(t,r){e.addOrUpdateKey(r);r.isPrivate()&&(e.newidentityopts=!1,e.workstarted=!0),e.allKeys().length>1&&(e.workstarted=!0),e.allKeys().length>2&&(e.skipintro=!0),e.saveKeys()}),e.$on("deletekey",function(t,r){var n=e.getFingerprint(r);r.isPrivate()?e.keyring.privateKeys.removeForId(n):e.keyring.publicKeys.removeForId(n),e.saveKeys()}),e.loadKeys=function(){var e=new openpgp.Keyring;console.log(e)},e.saveKeys=function(){e.persist&&(e.keyring.store(),e.stored=!0)},e.purgeKeys=function(){var t=r.open({animation:e.animationsEnabled,templateUrl:"chickenBox.html",controller:"chickenBoxCtrl",size:"lg",resolve:{content:function(){return{title:"Delete ALL key data!",danger:e.privateKeys().length>0}}}});t.result.then(function(t){e.keyring.clear(),e.keyring.store(),e.stored=!1,e.$state.go("key",{key:null,"private":!1})},function(){})}}]),pgpApp.controller("KeyWorkCtrl",["$scope","focus","$state","$stateParams","$modal",function(e,t,r,n,o){e.key=null,e.$stateParams=n,e.$state=r,e.init=function(){"pgp"in n&&n.pgp?(e.rawkey=decodeURIComponent(n.pgp),key=e.loadKey_raw(),key&&(e.key=key,t("message"))):(e.key=e.findKey(n.key,n["private"]),e.isNewKey()?(e.rawkey="",t("pgppub")):e.isPrivateKey()?(e.rawkey=e.key.toPublic().armor(),e.rawkey_private=e.key.armor(),t(e.isDecryptedKey()?"pmessage":"passphrase")):(e.rawkey=e.key.armor(),t("message")))},e.isNewKey=function(){return null==e.key},e.isPrivateKey=function(){return e.key?e.isPrivate(e.key):e.$stateParams["private"]},e.isDecryptedKey=function(){return e.key?e.isDecrypted(e.key):!1},e.deleteKey=function(){var t=o.open({animation:e.animationsEnabled,templateUrl:"chickenBox.html",controller:"chickenBoxCtrl",size:"lg",resolve:{content:function(){return{title:"Delete key data",danger:e.isPrivateKey()}}}});t.result.then(function(t){e.$emit("deletekey",e.key),e.$state.go("key",{key:null,"private":!1})},function(){})},e.mailit=function(){var t=e.getUser(e.key).match(/\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\b/);if(!t)return"";var r=t[0],n=e.resulttext;return"mailto:"+r+"?subject="+encodeURIComponent("Sent from pgp.help")+"&body="+encodeURIComponent(n)},e.encodeURIComponent=function(e){var t=encodeURIComponent(e);return t},e.loadKey_raw=function(){var r;try{var r=openpgp.key.readArmored(e.rawkey)}catch(n){return e.pgperror=!0,null}if(r.err)return e.pgperror=!0,null;for(e.pgperror=!1,key=r.keys[r.keys.length-1],e.smartfade="smartfade",t("message"),i=0;i<r.keys.length;i++)e.$emit("newkey",r.keys[i]);return key},e.loadKey=function(){if(key=e.loadKey_raw(),key){var t={key:e.getFingerprint(key),"private":e.isPrivate(key)};e.$state.go("key",t)}},e.encryptMessage=function(){e.resulttext="",e.message&&!e.isNewKey()&&openpgp.encryptMessage(e.key,e.message).then(function(t){e.resulttext=t,e.$apply()})["catch"](function(t){e.resulttext=t,e.$apply()})},e.applyPassword=function(){if(e.passworderror=!1,e.password){var r=e.key.decrypt(e.password);e.passworderror=!r,r&&(e.password="",t("pmessage")),r&&e.pmessage&&e.decryptMessage()}},e.decryptMessage=function(){if(e.resulttext="",e.pmessageerror=!1,!e.isNewKey()&&e.pmessage){var r;try{r=openpgp.message.readArmored(e.pmessage)}catch(n){return e.resulttext=n.message,void(e.pmessageerror=!0)}return e.isDecryptedKey()?void openpgp.decryptMessage(e.key,r).then(function(t){e.resulttext=t,e.$apply()})["catch"](function(t){e.resulttext=t.message,e.$apply()}):void t("passphrase")}},e.init()}]),pgpApp.controller("KeyGenerator",["$scope","$state","focus",function(e,t,r){e.working=!1,e.$state=t,e.generateKeyPair=function(){var t;t=e.user?e.email?e.user+" <"+e.email+">":e.user:e.email;var r={numBits:2048,userId:t,passphrase:e.passphrase};e.working=!0,openpgp.generateKeyPair(r).then(function(t){e.working=!1;var r=openpgp.key.readArmored(t.publicKeyArmored);e.$emit("persist"),e.$emit("newkey",r.keys[0]),e.$emit("newkey",t.key),e.$state.go("key",{key:e.getFingerprint(t.key),"private":!0})})["catch"](function(t){e.working=!1,console.log(t),e.$apply()})}}]),pgpApp.controller("chickenBoxCtrl",["$scope","$modalInstance","content",function(e,t,r){e.content=r,e.ok=function(){t.close(!0)},e.cancel=function(){t.dismiss("cancel")}}]);var myKey=["-----BEGIN PGP PUBLIC KEY BLOCK-----","Version: OpenPGP.js v1.2.0","Comment: https://pgp.help","","xsBNBFW7TH8BCADccz73OFQprAsBLNTFNZFTPzDUbmwKn5BMFFK7rYf7v8Gj","PyYQrl9DupBTiP6ISyTIvn/pT0/+G1yTYzliej4UZP7LOUz+pg59/X2JP7Ko","3UzH9qoO3FYXl85ok/daSNRt0VrKSoGcMuoLw7CT48hHZdIXSwoPFP//n8Qo","3u1J3LghZQLPdnZfWHPA6ZKLvcgQaByCABsRrH7L75+Qw49Wb3VeBiE5u26E","j3NXUc1GskMvFHp8pUnfzFxF4sCzk/o+zqJW8NtIje48beufH4eMBF2NK6nF","1Et8ESCM7jE10rpWm+nsl8lMooQEbUXoMp2z2s2zuYmaiV+ONaa3UT6fABEB","AAHNGVBncCBIZWxwIDxoZWxsb0BwZ3AuaGVscD7CwHIEEAEIACYFAlW7TIAG","CwkIBwMCCRAj/Z8+mwZ1aQQVCAIKAxYCAQIbAwIeAQAApGkIAJCtB3PD5aka","rGPzePxmqc37cpOGx/ArO8M7ouXDkc75xt3MOMvAFB4y8lytwteXbLG50Kl0","1KHp1NkUEJM0eR8SxGaPipEgN0PRoEDhN8VgR3m4Lq5RlTMFq1yXQgjPGndB","sP+KIDSfBEPZOlMW9VgdzThjqj8WqVxvaoRPbazLpS+WYrGTx4WjcsoS53ou","b7Fd6rkOdZcbgmUooDHRiNSNJq+RCwZnffxLlJQp3r3U0Ll4Mrsb/pxcOjde","7Cnc1SildK3m5iIuteGSIl8qXXTidcw5vV9w1xDLu7mPztaXlM72KaVkuhJN","/mSaCFTAAgECmvgP88ByG0uDu4SpeFrOwE0EVbtMfwEIAM/+tJfjT8ER4qe0","VJJPCqAcUffyXyABnN4NymDxz97ol9xwi2boTb2oDtTkAXmTU5pKKOjZFtV1","FizpVemVoGWBnmEZBaOUMZy2qFEIHrPh0OWaiuCSr+m/VjvOWota//bJZg1H","/o9JaMXSefE+lWak/BZagMAX/EOWUfzYfNSfHViua5HxKA5PoQ7Blcxt7T1f","5427XhoSpZzdbi9XjlYZmFlQ08MYG18wTVa6g8MJ7qr9TIVZPRnSrtE15iP1","8py3tXn97PToLd78ZkTfnlKZwrMxuFHcNCHMpVbEXD6zVWATeMMNRo5an3kg","dE9+9odr2zZWdJgnN1PDwbGKeEEAEQEAAcLAXwQYAQgAEwUCVbtMgQkQI/2f","PpsGdWkCGwwAAL2qCACSkHd3SDv1XTJJcwsazkXr+NMJaNSN7qQFPMboDS0Z","3pX27Rn1ev1UHTqFKBYgogxyeUOnbeXE+VAFYuoeNCbFYY1TFhvGVWRax/rf","PBuVQ4d1+g87nxSL3JFwvSGzTjPkJiU+rGOIkOqYK0JA/T8+ZqrXTQoH2d7i","r1vldA2CakQ+Mf+BjHjG06doQlrbuGBYXLWJbATpcKmK++kWaGE01h5rFbx8","JmS3SZME1N2bdm99TJVzbWbHqcJge/1lfEY1PecjweX2McXQEVGmZLPdN6dF","HLrZ5SS/qnXSXE79odO4Cd/gx1nJrovmut1vZfxh3yyLOnh9+BZX/NeU9FWu","","=MMEa","-----END PGP PUBLIC KEY BLOCK-----"].join("\n");